package com.athapong.arcodeapp;

import java.io.File;

import android.app.Activity;  
import android.content.Intent;  
import android.graphics.Bitmap; 
import android.graphics.BitmapFactory;
import android.net.Uri;
//import android.graphics.BitmapFactory;
import android.os.Bundle;  
import android.os.Environment;
import android.provider.MediaStore;
//import android.view.Menu;  
import android.view.View;  
import android.widget.Button;  
import android.widget.ImageView; 
//import java.io.FileNotFoundException;
//import java.io.IOException;
//import java.io.InputStream;
  
public class CaptureActivity extends Activity {  
     private static final int CAMERA_REQUEST = 1888;  
     ImageView imageView;  
     
     //private Bitmap bitmap;
     
     public void onCreate(Bundle savedInstanceState) {  
  
         super.onCreate(savedInstanceState);  
         setContentView(R.layout.activity_capture);  
  
         imageView = (ImageView) this.findViewById(R.id.imageView1);  
         Button photoButton = (Button) this.findViewById(R.id.button1);  
  
         photoButton.setOnClickListener(new View.OnClickListener() {  
  
         @Override  
         public void onClick(View v) {  
//              Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); 
//              startActivityForResult(cameraIntent, CAMERA_REQUEST); 
        	 Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
        	 File file = new File(Environment.getExternalStorageDirectory()+File.separator + "image.jpg");
        	 intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));
        	 startActivityForResult(intent, CAMERA_REQUEST);
         }  
        });  
       }  
  
     protected void onActivityResult(int requestCode, int resultCode, Intent data) { 
    	 
    	 File file = new File(Environment.getExternalStorageDirectory()+File.separator + "image.jpg");
    	 imageView = (ImageView) findViewById(R.id.imageView1);
    	 imageView.setImageBitmap(decodeSampledBitmapFromFile(file.getAbsolutePath(), 500, 250));
    	 
    	
    	 
//    	 if (requestCode == CAMERA_REQUEST) {  
//    		 Bitmap photo = (Bitmap) data.getExtras().get("data");  
//    		 imageView.setImageBitmap(photo);
//    	 }
//    	 super.onActivityResult(requestCode, resultCode, data);
   }
     
     public static Bitmap decodeSampledBitmapFromFile(String path,int reqWidth, int reqHeight) { // BEST QUALITY MATCH

    	    // First decode with inJustDecodeBounds=true to check dimensions
    	    final BitmapFactory.Options options = new BitmapFactory.Options();
    	    options.inJustDecodeBounds = true;
    	    BitmapFactory.decodeFile(path, options);

    	    // Calculate inSampleSize
    	        // Raw height and width of image
    	        final int height = options.outHeight;
    	        final int width = options.outWidth;
    	        options.inPreferredConfig = Bitmap.Config.RGB_565;
    	        int inSampleSize = 1;

    	        if (height > reqHeight) {
    	            inSampleSize = Math.round((float)height / (float)reqHeight);
    	        }

    	        int expectedWidth = width / inSampleSize;

    	        if (expectedWidth > reqWidth) {
    	            //if(Math.round((float)width / (float)reqWidth) > inSampleSize) // If bigger SampSize..
    	            inSampleSize = Math.round((float)width / (float)reqWidth);
    	        }


    	    options.inSampleSize = inSampleSize;

    	    // Decode bitmap with inSampleSize set
    	    options.inJustDecodeBounds = false;

    	    return BitmapFactory.decodeFile(path, options);
    	  }
 
  
}  
